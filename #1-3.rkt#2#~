#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
          0 0 47 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
          0 1796 0 26 3 12 #"#lang racket"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 4 3 1 #" "
0 0 19 3 9 #"\"1-2.rkt\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"sum-rec"
0 0 4 3 1 #" "
0 0 14 3 4 #"term"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 4 #"next"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #">"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 20 3 1 #"0"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"term"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 7 #"sum-rec"
0 0 4 3 1 #" "
0 0 14 3 4 #"term"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"next"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"next"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"sum-cubes"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 3 #"sum"
0 0 4 3 1 #" "
0 0 14 3 4 #"cube"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 4 #"add1"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cube"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"sum-int"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 3 #"sum"
0 0 4 3 1 #" "
0 0 14 3 8 #"identity"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 4 #"add1"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"identity"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"pi-sum"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"pi-term"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 4 3 1 #" "
0 0 20 3 3 #"1.0"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"pi-next"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 20 3 1 #"4"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 3 #"sum"
0 0 4 3 1 #" "
0 0 14 3 7 #"pi-term"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 7 #"pi-next"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"integral"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 4 3 1 #" "
0 0 14 3 2 #"dx"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"add-dx"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 2 #"dx"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"sum"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 4 3 1 #" "
0 0 14 3 2 #"dx"
0 0 4 3 1 #" "
0 0 20 3 3 #"2.0"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 6 #"add-dx"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 14 3 2 #"dx"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 14 #";Exercise 1.29"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"simpson"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 1 #"h"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"y"
0 0 4 3 1 #" "
0 0 14 3 1 #"k"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 14 3 1 #"k"
0 0 4 3 1 #" "
0 0 14 3 1 #"h"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"term"
0 0 4 3 1 #" "
0 0 14 3 1 #"k"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 2 #"or"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 14 3 1 #"k"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 14 3 1 #"k"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"y"
0 0 4 3 1 #" "
0 0 14 3 1 #"k"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 2 #"[("
0 0 14 3 5 #"even?"
0 0 4 3 1 #" "
0 0 14 3 1 #"k"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"y"
0 0 4 3 1 #" "
0 0 14 3 1 #"k"
0 0 22 3 3 #"))]"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 20 3 1 #"4"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"y"
0 0 4 3 1 #" "
0 0 14 3 1 #"k"
0 0 22 3 5 #"))]))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"helper"
0 0 4 3 1 #" "
0 0 14 3 1 #"k"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 3 #"sum"
0 0 4 3 1 #" "
0 0 14 3 4 #"term"
0 0 4 3 1 #" "
0 0 14 3 1 #"k"
0 0 4 3 1 #" "
0 0 14 3 4 #"add1"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 4 3 1 #" "
0 0 14 3 1 #"h"
0 0 4 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"helper"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 14 #";Exercise 1.30"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"sum-iter"
0 0 4 3 1 #" "
0 0 14 3 4 #"term"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 4 #"next"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"iter"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 6 #"result"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"<"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 14 3 6 #"result"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 4 #"iter"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"next"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"term"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 6 #"result"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 4 #"iter"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 14 #";Exercise 1.31"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"product-rec"
0 0 4 3 1 #" "
0 0 14 3 4 #"term"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 4 #"next"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"<"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 20 3 1 #"1"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"term"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 11 #"product-rec"
0 0 4 3 1 #" "
0 0 14 3 4 #"term"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"next"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"next"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"factorial"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 7 #"product"
0 0 4 3 1 #" "
0 0 14 3 8 #"identity"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 4 3 1 #" "
0 0 14 3 4 #"add1"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"pi-product"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"pi-term"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"even?"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 7 #"product"
0 0 4 3 1 #" "
0 0 14 3 7 #"pi-term"
0 0 4 3 1 #" "
0 0 20 3 3 #"1.0"
0 0 4 3 1 #" "
0 0 14 3 4 #"add1"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"product-iter"
0 0 4 3 1 #" "
0 0 14 3 4 #"term"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 4 #"next"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"iter"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 6 #"result"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"<"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 14 3 6 #"result"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 4 #"iter"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"next"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"term"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 6 #"result"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 4 #"iter"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 14 #";Exercise 1.32"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"accumulate-rec"
0 0 4 3 1 #" "
0 0 14 3 8 #"combiner"
0 0 4 3 1 #" "
0 0 14 3 10 #"null-value"
0 0 4 3 1 #" "
0 0 14 3 4 #"term"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 4 #"next"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"<"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 14 3 10 #"null-value"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 8 #"combiner"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"term"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 10 #"accumulate"
0 0 4 3 1 #" "
0 0 14 3 8 #"combiner"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 28 #"                            "
0 0 14 3 10 #"null-value"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 28 #"                            "
0 0 14 3 4 #"term"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 28 #"                            "
0 0 22 3 1 #"("
0 0 14 3 4 #"next"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 28 #"                            "
0 0 14 3 4 #"next"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"accumulate"
0 0 4 3 1 #" "
0 0 14 3 8 #"combiner"
0 0 4 3 1 #" "
0 0 14 3 10 #"null-value"
0 0 4 3 1 #" "
0 0 14 3 4 #"term"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 4 #"next"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"iter"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 6 #"result"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"<"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 14 3 6 #"result"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 4 #"iter"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"next"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"combiner"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"term"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 6 #"result"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 4 #"iter"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 10 #"null-value"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"sum"
0 0 4 3 1 #" "
0 0 14 3 4 #"term"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 4 #"next"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 10 #"accumulate"
0 0 4 3 1 #" "
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 14 3 4 #"term"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 4 #"next"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"product"
0 0 4 3 1 #" "
0 0 14 3 4 #"term"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 4 #"next"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 10 #"accumulate"
0 0 4 3 1 #" "
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 4 3 1 #" "
0 0 14 3 4 #"term"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 4 #"next"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 14 #";Exercise 1.33"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"filt-acc"
0 0 4 3 1 #" "
0 0 14 3 6 #"filter"
0 0 4 3 1 #" "
0 0 14 3 8 #"combiner"
0 0 4 3 1 #" "
0 0 14 3 10 #"null-value"
0 0 4 3 1 #" "
0 0 14 3 4 #"term"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 4 #"next"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"iter"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 6 #"result"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 1 #"<"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 6 #"result"
0 0 22 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 2 #"[("
0 0 14 3 6 #"filter"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 4 #"iter"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"next"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"combiner"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"term"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 6 #"result"
0 0 22 3 3 #"))]"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"iter"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"next"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 6 #"result"
0 0 22 3 4 #")]))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 4 #"iter"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 10 #"null-value"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"sum-of-sq-primes"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 8 #"filt-acc"
0 0 4 3 1 #" "
0 0 14 3 6 #"prime?"
0 0 4 3 1 #" "
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 14 3 6 #"square"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 4 #"add1"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"product-rel-primes"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"filter"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"gcd"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 8 #"filt-acc"
0 0 4 3 1 #" "
0 0 14 3 6 #"filter"
0 0 4 3 1 #" "
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 4 3 1 #" "
0 0 14 3 8 #"identity"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 4 3 1 #" "
0 0 14 3 4 #"add1"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 14 #";Exercise 1.34"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 1 #"g"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 1 #"g"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 11 65
#";It will provide an error saying that it expects the argument to "
0 0 17 3 41 #"f (g in the body of f) to be a procedure."
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"search"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 9 #"neg-point"
0 0 4 3 1 #" "
0 0 14 3 9 #"pos-point"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 8 #"midpoint"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"average"
0 0 4 3 1 #" "
0 0 14 3 9 #"neg-point"
0 0 4 3 1 #" "
0 0 14 3 9 #"pos-point"
0 0 22 3 3 #")])"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"close-enough?"
0 0 4 3 1 #" "
0 0 14 3 9 #"neg-point"
0 0 4 3 1 #" "
0 0 14 3 9 #"pos-point"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 14 3 8 #"midpoint"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 10 #"test-value"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 8 #"midpoint"
0 0 22 3 3 #")])"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 9 #"positive?"
0 0 4 3 1 #" "
0 0 14 3 10 #"test-value"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 22 3 1 #"("
0 0 14 3 6 #"search"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 9 #"neg-point"
0 0 4 3 1 #" "
0 0 14 3 8 #"midpoint"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 2 #"[("
0 0 14 3 9 #"negative?"
0 0 4 3 1 #" "
0 0 14 3 10 #"test-value"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 22 3 1 #"("
0 0 14 3 6 #"search"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 8 #"midpoint"
0 0 4 3 1 #" "
0 0 14 3 9 #"pos-point"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 14 3 8 #"midpoint"
0 0 22 3 6 #"))))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"average"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"close-enough?"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 1 #"<"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"abs"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 20 3 5 #"0.001"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 20 #"half-interval-method"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 7 #"a-value"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 7 #"b-value"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"negative?"
0 0 4 3 1 #" "
0 0 14 3 7 #"a-value"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"positive?"
0 0 4 3 1 #" "
0 0 14 3 7 #"b-value"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 6 #"search"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 2 #"[("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"negative?"
0 0 4 3 1 #" "
0 0 14 3 7 #"b-value"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"positive?"
0 0 4 3 1 #" "
0 0 14 3 7 #"a-value"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 6 #"search"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"error"
0 0 4 3 1 #" "
0 0 19 3 33 #"\"Values are not of opposite sign\""
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 5 #")])))"
0 0 4 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"fixed-point"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 11 #"first-guess"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 9 #"tolerance"
0 0 4 3 1 #" "
0 0 20 3 7 #"0.00001"
0 0 22 3 2 #"])"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"close-enough?"
0 0 4 3 1 #" "
0 0 14 3 2 #"v1"
0 0 4 3 1 #" "
0 0 14 3 2 #"v2"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 1 #"<"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"abs"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 14 3 2 #"v1"
0 0 4 3 1 #" "
0 0 14 3 2 #"v2"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 9 #"tolerance"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"try"
0 0 4 3 1 #" "
0 0 14 3 5 #"guess"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 4 #"next"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"guess"
0 0 22 3 3 #")])"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 4 3 1 #" "
0 0 14 3 5 #"guess"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 7 #"newline"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"close-enough?"
0 0 4 3 1 #" "
0 0 14 3 5 #"guess"
0 0 4 3 1 #" "
0 0 14 3 4 #"next"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 14 3 4 #"next"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 3 #"try"
0 0 4 3 1 #" "
0 0 14 3 4 #"next"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 3 #"try"
0 0 4 3 1 #" "
0 0 14 3 11 #"first-guess"
0 0 22 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"sqrt"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 11 #"fixed-point"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"average"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 20 3 3 #"1.0"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"cont-frac-rec"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 14 3 1 #"d"
0 0 4 3 1 #" "
0 0 14 3 1 #"k"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"helper"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #">"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 14 3 1 #"k"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 20 3 1 #"0"
0 0 14 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"d"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"helper"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"add1"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 22 3 6 #"))))))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 6 #"helper"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"cont-frac"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 14 3 1 #"d"
0 0 4 3 1 #" "
0 0 14 3 1 #"k"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"iter"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 14 3 6 #"result"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 14 3 6 #"result"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 4 #"iter"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"d"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 6 #"result"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 4 #"iter"
0 0 4 3 1 #" "
0 0 14 3 1 #"k"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0           0
